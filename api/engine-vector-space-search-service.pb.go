// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.3
// source: github.com/amazingchow/engine-vector-space-search-service/pb/engine-vector-space-search-service.proto

package api

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type WebStation int32

const (
	// 中华人民共和国财政部网站
	WebStation_MOFRPC WebStation = 0
)

// Enum value maps for WebStation.
var (
	WebStation_name = map[int32]string{
		0: "MOFRPC",
	}
	WebStation_value = map[string]int32{
		"MOFRPC": 0,
	}
)

func (x WebStation) Enum() *WebStation {
	p := new(WebStation)
	*p = x
	return p
}

func (x WebStation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WebStation) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_enumTypes[0].Descriptor()
}

func (WebStation) Type() protoreflect.EnumType {
	return &file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_enumTypes[0]
}

func (x WebStation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WebStation.Descriptor instead.
func (WebStation) EnumDescriptor() ([]byte, []int) {
	return file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_rawDescGZIP(), []int{0}
}

type DocType int32

const (
	// HTML格式文件
	DocType_HTMLDoc DocType = 0
	// TXT格式文件
	DocType_TextDoc DocType = 1
)

// Enum value maps for DocType.
var (
	DocType_name = map[int32]string{
		0: "HTMLDoc",
		1: "TextDoc",
	}
	DocType_value = map[string]int32{
		"HTMLDoc": 0,
		"TextDoc": 1,
	}
)

func (x DocType) Enum() *DocType {
	p := new(DocType)
	*p = x
	return p
}

func (x DocType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DocType) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_enumTypes[1].Descriptor()
}

func (DocType) Type() protoreflect.EnumType {
	return &file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_enumTypes[1]
}

func (x DocType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DocType.Descriptor instead.
func (DocType) EnumDescriptor() ([]byte, []int) {
	return file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_rawDescGZIP(), []int{1}
}

type PacketDeliveryStatus int32

const (
	// 数据包派送中
	PacketDeliveryStatus_InDelivery PacketDeliveryStatus = 0
	// 数据包派送完毕或无数据可供派送
	PacketDeliveryStatus_OutOfStock PacketDeliveryStatus = 1
)

// Enum value maps for PacketDeliveryStatus.
var (
	PacketDeliveryStatus_name = map[int32]string{
		0: "InDelivery",
		1: "OutOfStock",
	}
	PacketDeliveryStatus_value = map[string]int32{
		"InDelivery": 0,
		"OutOfStock": 1,
	}
)

func (x PacketDeliveryStatus) Enum() *PacketDeliveryStatus {
	p := new(PacketDeliveryStatus)
	*p = x
	return p
}

func (x PacketDeliveryStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PacketDeliveryStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_enumTypes[2].Descriptor()
}

func (PacketDeliveryStatus) Type() protoreflect.EnumType {
	return &file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_enumTypes[2]
}

func (x PacketDeliveryStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PacketDeliveryStatus.Descriptor instead.
func (PacketDeliveryStatus) EnumDescriptor() ([]byte, []int) {
	return file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_rawDescGZIP(), []int{2}
}

type ServiceStatus int32

const (
	ServiceStatus_Unavailable ServiceStatus = 0
	ServiceStatus_Available   ServiceStatus = 1
)

// Enum value maps for ServiceStatus.
var (
	ServiceStatus_name = map[int32]string{
		0: "Unavailable",
		1: "Available",
	}
	ServiceStatus_value = map[string]int32{
		"Unavailable": 0,
		"Available":   1,
	}
)

func (x ServiceStatus) Enum() *ServiceStatus {
	p := new(ServiceStatus)
	*p = x
	return p
}

func (x ServiceStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_enumTypes[3].Descriptor()
}

func (ServiceStatus) Type() protoreflect.EnumType {
	return &file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_enumTypes[3]
}

func (x ServiceStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceStatus.Descriptor instead.
func (ServiceStatus) EnumDescriptor() ([]byte, []int) {
	return file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_rawDescGZIP(), []int{3}
}

// 传输数据包.
type Packet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WebStation     WebStation           `protobuf:"varint,1,opt,name=web_station,json=webStation,proto3,enum=amazingchow.engine_vector_space_search_service.WebStation" json:"web_station,omitempty"`
	DocType        DocType              `protobuf:"varint,2,opt,name=doc_type,json=docType,proto3,enum=amazingchow.engine_vector_space_search_service.DocType" json:"doc_type,omitempty"`
	DocId          string               `protobuf:"bytes,3,opt,name=doc_id,json=docId,proto3" json:"doc_id,omitempty"`
	DocTitle       string               `protobuf:"bytes,4,opt,name=doc_title,json=docTitle,proto3" json:"doc_title,omitempty"`
	DeliveryStatus PacketDeliveryStatus `protobuf:"varint,5,opt,name=delivery_status,json=deliveryStatus,proto3,enum=amazingchow.engine_vector_space_search_service.PacketDeliveryStatus" json:"delivery_status,omitempty"`
}

func (x *Packet) Reset() {
	*x = Packet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Packet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Packet) ProtoMessage() {}

func (x *Packet) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Packet.ProtoReflect.Descriptor instead.
func (*Packet) Descriptor() ([]byte, []int) {
	return file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_rawDescGZIP(), []int{0}
}

func (x *Packet) GetWebStation() WebStation {
	if x != nil {
		return x.WebStation
	}
	return WebStation_MOFRPC
}

func (x *Packet) GetDocType() DocType {
	if x != nil {
		return x.DocType
	}
	return DocType_HTMLDoc
}

func (x *Packet) GetDocId() string {
	if x != nil {
		return x.DocId
	}
	return ""
}

func (x *Packet) GetDocTitle() string {
	if x != nil {
		return x.DocTitle
	}
	return ""
}

func (x *Packet) GetDeliveryStatus() PacketDeliveryStatus {
	if x != nil {
		return x.DeliveryStatus
	}
	return PacketDeliveryStatus_InDelivery
}

// -------------------- request & response --------------------
type QueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Topk  uint32 `protobuf:"varint,2,opt,name=topk,proto3" json:"topk,omitempty"`
}

func (x *QueryRequest) Reset() {
	*x = QueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRequest) ProtoMessage() {}

func (x *QueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRequest.ProtoReflect.Descriptor instead.
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_rawDescGZIP(), []int{1}
}

func (x *QueryRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *QueryRequest) GetTopk() uint32 {
	if x != nil {
		return x.Topk
	}
	return 0
}

type QueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Docs []string `protobuf:"bytes,1,rep,name=docs,proto3" json:"docs,omitempty"`
}

func (x *QueryResponse) Reset() {
	*x = QueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResponse) ProtoMessage() {}

func (x *QueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResponse.ProtoReflect.Descriptor instead.
func (*QueryResponse) Descriptor() ([]byte, []int) {
	return file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_rawDescGZIP(), []int{2}
}

func (x *QueryResponse) GetDocs() []string {
	if x != nil {
		return x.Docs
	}
	return nil
}

type GetSystemInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSystemInfoRequest) Reset() {
	*x = GetSystemInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSystemInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemInfoRequest) ProtoMessage() {}

func (x *GetSystemInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemInfoRequest.ProtoReflect.Descriptor instead.
func (*GetSystemInfoRequest) Descriptor() ([]byte, []int) {
	return file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_rawDescGZIP(), []int{3}
}

type GetSystemInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocumentCapacity   uint64        `protobuf:"varint,1,opt,name=document_capacity,json=documentCapacity,proto3" json:"document_capacity,omitempty"`
	Document           uint64        `protobuf:"varint,2,opt,name=document,proto3" json:"document,omitempty"`
	VocabularyCapacity uint64        `protobuf:"varint,3,opt,name=vocabulary_capacity,json=vocabularyCapacity,proto3" json:"vocabulary_capacity,omitempty"`
	Vocabulary         uint64        `protobuf:"varint,4,opt,name=vocabulary,proto3" json:"vocabulary,omitempty"`
	ServiceStatus      ServiceStatus `protobuf:"varint,5,opt,name=service_status,json=serviceStatus,proto3,enum=amazingchow.engine_vector_space_search_service.ServiceStatus" json:"service_status,omitempty"`
}

func (x *GetSystemInfoResponse) Reset() {
	*x = GetSystemInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSystemInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemInfoResponse) ProtoMessage() {}

func (x *GetSystemInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemInfoResponse.ProtoReflect.Descriptor instead.
func (*GetSystemInfoResponse) Descriptor() ([]byte, []int) {
	return file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetSystemInfoResponse) GetDocumentCapacity() uint64 {
	if x != nil {
		return x.DocumentCapacity
	}
	return 0
}

func (x *GetSystemInfoResponse) GetDocument() uint64 {
	if x != nil {
		return x.Document
	}
	return 0
}

func (x *GetSystemInfoResponse) GetVocabularyCapacity() uint64 {
	if x != nil {
		return x.VocabularyCapacity
	}
	return 0
}

func (x *GetSystemInfoResponse) GetVocabulary() uint64 {
	if x != nil {
		return x.Vocabulary
	}
	return 0
}

func (x *GetSystemInfoResponse) GetServiceStatus() ServiceStatus {
	if x != nil {
		return x.ServiceStatus
	}
	return ServiceStatus_Unavailable
}

var File_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto protoreflect.FileDescriptor

var file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_rawDesc = []byte{
	0x0a, 0x65, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6d, 0x61,
	0x7a, 0x69, 0x6e, 0x67, 0x63, 0x68, 0x6f, 0x77, 0x2f, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2d,
	0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2d, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2d, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x62, 0x2f, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2d, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2d, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x2d, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2e, 0x61, 0x6d, 0x61, 0x7a, 0x69, 0x6e, 0x67,
	0x63, 0x68, 0x6f, 0x77, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x5f, 0x76, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdc, 0x02, 0x0a, 0x06, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x5b, 0x0a, 0x0b, 0x77, 0x65, 0x62, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x61, 0x6d, 0x61, 0x7a, 0x69, 0x6e, 0x67, 0x63,
	0x68, 0x6f, 0x77, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x65, 0x62, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x77, 0x65, 0x62, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x52, 0x0a,
	0x08, 0x64, 0x6f, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x37, 0x2e, 0x61, 0x6d, 0x61, 0x7a, 0x69, 0x6e, 0x67, 0x63, 0x68, 0x6f, 0x77, 0x2e, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x44, 0x6f, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x64, 0x6f, 0x63, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x6f, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x64, 0x6f, 0x63, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x63, 0x5f,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x63,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x6d, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x44,
	0x2e, 0x61, 0x6d, 0x61, 0x7a, 0x69, 0x6e, 0x67, 0x63, 0x68, 0x6f, 0x77, 0x2e, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x0e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x38, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f,
	0x70, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x6f, 0x70, 0x6b, 0x22, 0x23,
	0x0a, 0x0d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x6f, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x6f, 0x63, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x97, 0x02, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x10, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2f,
	0x0a, 0x13, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x76, 0x6f, 0x63,
	0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12,
	0x1e, 0x0a, 0x0a, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x12,
	0x64, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x61, 0x6d, 0x61, 0x7a, 0x69, 0x6e,
	0x67, 0x63, 0x68, 0x6f, 0x77, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x5f, 0x76, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0x18, 0x0a, 0x0a, 0x57, 0x65, 0x62, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x4f, 0x46, 0x52, 0x50, 0x43, 0x10, 0x00, 0x2a,
	0x23, 0x0a, 0x07, 0x44, 0x6f, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x48, 0x54,
	0x4d, 0x4c, 0x44, 0x6f, 0x63, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x65, 0x78, 0x74, 0x44,
	0x6f, 0x63, 0x10, 0x01, 0x2a, 0x36, 0x0a, 0x14, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x0a,
	0x49, 0x6e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a,
	0x4f, 0x75, 0x74, 0x4f, 0x66, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x10, 0x01, 0x2a, 0x2f, 0x0a, 0x0d,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0f, 0x0a,
	0x0b, 0x55, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x00, 0x12, 0x0d,
	0x0a, 0x09, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x01, 0x32, 0xe3, 0x02,
	0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x9a,
	0x01, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x3c, 0x2e, 0x61, 0x6d, 0x61, 0x7a, 0x69,
	0x6e, 0x67, 0x63, 0x68, 0x6f, 0x77, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x5f, 0x76, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x61, 0x6d, 0x61, 0x7a, 0x69, 0x6e, 0x67,
	0x63, 0x68, 0x6f, 0x77, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x5f, 0x76, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x22, 0x09, 0x2f,
	0x76, 0x31, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x3a, 0x01, 0x2a, 0x12, 0xb5, 0x01, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x44, 0x2e,
	0x61, 0x6d, 0x61, 0x7a, 0x69, 0x6e, 0x67, 0x63, 0x68, 0x6f, 0x77, 0x2e, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x45, 0x2e, 0x61, 0x6d, 0x61, 0x7a, 0x69, 0x6e, 0x67, 0x63, 0x68, 0x6f,
	0x77, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x11, 0x12, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x42, 0x3f, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x61, 0x6d, 0x61, 0x7a, 0x69, 0x6e, 0x67, 0x63, 0x68, 0x6f, 0x77, 0x2f, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2d, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2d, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x2d, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_rawDescOnce sync.Once
	file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_rawDescData = file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_rawDesc
)

func file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_rawDescGZIP() []byte {
	file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_rawDescOnce.Do(func() {
		file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_rawDescData)
	})
	return file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_rawDescData
}

var file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_goTypes = []interface{}{
	(WebStation)(0),               // 0: amazingchow.engine_vector_space_search_service.WebStation
	(DocType)(0),                  // 1: amazingchow.engine_vector_space_search_service.DocType
	(PacketDeliveryStatus)(0),     // 2: amazingchow.engine_vector_space_search_service.PacketDeliveryStatus
	(ServiceStatus)(0),            // 3: amazingchow.engine_vector_space_search_service.ServiceStatus
	(*Packet)(nil),                // 4: amazingchow.engine_vector_space_search_service.Packet
	(*QueryRequest)(nil),          // 5: amazingchow.engine_vector_space_search_service.QueryRequest
	(*QueryResponse)(nil),         // 6: amazingchow.engine_vector_space_search_service.QueryResponse
	(*GetSystemInfoRequest)(nil),  // 7: amazingchow.engine_vector_space_search_service.GetSystemInfoRequest
	(*GetSystemInfoResponse)(nil), // 8: amazingchow.engine_vector_space_search_service.GetSystemInfoResponse
}
var file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_depIdxs = []int32{
	0, // 0: amazingchow.engine_vector_space_search_service.Packet.web_station:type_name -> amazingchow.engine_vector_space_search_service.WebStation
	1, // 1: amazingchow.engine_vector_space_search_service.Packet.doc_type:type_name -> amazingchow.engine_vector_space_search_service.DocType
	2, // 2: amazingchow.engine_vector_space_search_service.Packet.delivery_status:type_name -> amazingchow.engine_vector_space_search_service.PacketDeliveryStatus
	3, // 3: amazingchow.engine_vector_space_search_service.GetSystemInfoResponse.service_status:type_name -> amazingchow.engine_vector_space_search_service.ServiceStatus
	5, // 4: amazingchow.engine_vector_space_search_service.QueryService.Query:input_type -> amazingchow.engine_vector_space_search_service.QueryRequest
	7, // 5: amazingchow.engine_vector_space_search_service.QueryService.GetSystemInfo:input_type -> amazingchow.engine_vector_space_search_service.GetSystemInfoRequest
	6, // 6: amazingchow.engine_vector_space_search_service.QueryService.Query:output_type -> amazingchow.engine_vector_space_search_service.QueryResponse
	8, // 7: amazingchow.engine_vector_space_search_service.QueryService.GetSystemInfo:output_type -> amazingchow.engine_vector_space_search_service.GetSystemInfoResponse
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() {
	file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_init()
}
func file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_init() {
	if File_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Packet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSystemInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSystemInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_goTypes,
		DependencyIndexes: file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_depIdxs,
		EnumInfos:         file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_enumTypes,
		MessageInfos:      file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_msgTypes,
	}.Build()
	File_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto = out.File
	file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_rawDesc = nil
	file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_goTypes = nil
	file_github_com_amazingchow_engine_vector_space_search_service_pb_engine_vector_space_search_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// QueryServiceClient is the client API for QueryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueryServiceClient interface {
	Query(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryResponse, error)
	GetSystemInfo(ctx context.Context, in *GetSystemInfoRequest, opts ...grpc.CallOption) (*GetSystemInfoResponse, error)
}

type queryServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewQueryServiceClient(cc grpc.ClientConnInterface) QueryServiceClient {
	return &queryServiceClient{cc}
}

func (c *queryServiceClient) Query(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryResponse, error) {
	out := new(QueryResponse)
	err := c.cc.Invoke(ctx, "/amazingchow.engine_vector_space_search_service.QueryService/Query", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryServiceClient) GetSystemInfo(ctx context.Context, in *GetSystemInfoRequest, opts ...grpc.CallOption) (*GetSystemInfoResponse, error) {
	out := new(GetSystemInfoResponse)
	err := c.cc.Invoke(ctx, "/amazingchow.engine_vector_space_search_service.QueryService/GetSystemInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueryServiceServer is the server API for QueryService service.
type QueryServiceServer interface {
	Query(context.Context, *QueryRequest) (*QueryResponse, error)
	GetSystemInfo(context.Context, *GetSystemInfoRequest) (*GetSystemInfoResponse, error)
}

// UnimplementedQueryServiceServer can be embedded to have forward compatible implementations.
type UnimplementedQueryServiceServer struct {
}

func (*UnimplementedQueryServiceServer) Query(context.Context, *QueryRequest) (*QueryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Query not implemented")
}
func (*UnimplementedQueryServiceServer) GetSystemInfo(context.Context, *GetSystemInfoRequest) (*GetSystemInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSystemInfo not implemented")
}

func RegisterQueryServiceServer(s *grpc.Server, srv QueryServiceServer) {
	s.RegisterService(&_QueryService_serviceDesc, srv)
}

func _QueryService_Query_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServiceServer).Query(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/amazingchow.engine_vector_space_search_service.QueryService/Query",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServiceServer).Query(ctx, req.(*QueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryService_GetSystemInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSystemInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServiceServer).GetSystemInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/amazingchow.engine_vector_space_search_service.QueryService/GetSystemInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServiceServer).GetSystemInfo(ctx, req.(*GetSystemInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _QueryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "amazingchow.engine_vector_space_search_service.QueryService",
	HandlerType: (*QueryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Query",
			Handler:    _QueryService_Query_Handler,
		},
		{
			MethodName: "GetSystemInfo",
			Handler:    _QueryService_GetSystemInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/amazingchow/engine-vector-space-search-service/pb/engine-vector-space-search-service.proto",
}
